library(shiny)
runGitHub('iMESc_pred','DaniloCVieira', ref="main")
newcolhabs<- list(
  "viridis" = get('viridis'),
  "plasma" = get('plasma'),
  "matlab.like2" = get('matlab.like2'),
  "black" = colorRampPalette("black"),
  "gray" = colorRampPalette("gray"),
  "white" = colorRampPalette("white"),
  "royalblue" = colorRampPalette("royalblue"),
  "firebrick" = colorRampPalette("firebrick"),
  "forestGreen" = colorRampPalette("forestGreen"),
  "goldenrod3" =  colorRampPalette("goldenrod3"),

  "Rushmore1"=colorRampPalette(wes_palette("Rushmore1",100,type ="continuous")),
  "FantasticFox1"=colorRampPalette(wes_palette("FantasticFox1",100,type ="continuous")),
  "Blues"=colorRampPalette(RColorBrewer::brewer.pal(9,"Blues")),
  "heat"=get('heat.colors'),
  "Purples"=colorRampPalette(RColorBrewer::brewer.pal(9,"Purples")),
  "Greens"=colorRampPalette(RColorBrewer::brewer.pal(9,"Greens")),
  "Grays"=colorRampPalette(c("gray90","gray10"))

)
labels <-data.frame(fread("meta/factors_araca.csv", stringsAsFactors = T,na.strings=c("","NA")))



coords <-data.frame(fread("meta/coords_araca.csv"))
load("meta/base_shape_araca",verbose=T)
load("meta/layer_shape_araca",verbose=T)
data <-data.frame(fread("meta/nema_araca.csv", stringsAsFactors = T,na.strings=c("","NA")))
abio <-data.frame(fread("meta/envi_araca.csv", stringsAsFactors = T,na.strings=c("","NA")))

layer_shape<-layer_shape_araca
rownames(abio)<-abio[,1]
rownames(coords)<-coords[,1]
rownames(data)<-data[,1]
rownames(labels)<-labels[,1]
abio[,1]<-NULL
coords[,1]<-NULL
data[,1]<-NULL
abio<-na.omit(abio)
labels[,1]<-NULL
dim(labels)

try(wrapRF())

m<-supersom(c(list(X=as.matrix(data)),
              lapply(labels[rownames(data),], function (x) {
                m<-matrix(x,ncol=1)
                m<-as.factor(m)
                m
              })))





p<-Map_model(abio,1,coords,base_shape)
p<-map_style(abio,1,coords,p, col.palette = "viridis", showcoords=F,layer_shape=layer_shape,layer_col="gray50",lighten=.5, newcolhabs = newcolhabs)




p2<-Map_model(data,1,coords,base_shape)
p2<-map_style(data,1,coords,p2, col.palette = "matlab.like2", showcoords=F,layer_shape=layer_shape,layer_col="gray50",lighten=.5, newcolhabs = newcolhabs)

r1<-attr(p,"my_rst")
r2<-attr(p2,"my_rst")
attr(r1,"col.palette")<-"viridis"
attr(r2,"col.palette")<-"matlab.like2"
p2
rlist<-list(r1,r2)



list(X=as.matrix(getdata_som())),


factor<-factor(labels$season, labels=levels(labels$season)[c(4:1)], levels=levels(labels$season)[c(4:1)])

res<-data.frame(factor,data$Terschellingia_1)

pbox(res,newcolhabs=newcolhabs, horizontal=T)



boxplot(res, ann="l")

res<-res[1:50,]
factor(res[,1])

res[,1]
model=rda(data~as.matrix(abio))
plot(model)

data$Acanthonchus_1
data$Actinonema_1
sup_test<-"depth.area"
attr(data,"factor")<-labels
attr(abio,"factor")<-abio
attr(labels,"factor")<-labels
datalist<-list(a=data,b=abio,c=labels)

lapply(datalist,function(x) attr(x,"factor"))



res0<-unlist(
  lapply(datalist, function (x){
    res<-any(colnames(x)==sup_test)

  })
)
names(res0[res0==T])

## Classification
pic<-sample(1:nrow(data),50)
m<-wrapRF(abio,data[,1, drop=F], trainControl.args = list(method="repeatedcv",number=5, repeats=5,   savePredictions = "final"))

observed=labels[pic,"depth.area"]
predicted<-predict(m$finalModel, newdata=abio, predict.all=T)
predicted$individual

RFerror_class(predicted,observed)





## Regression
pic<-sample(1:nrow(data),50)
m<-wrapRF(abio[-pic],abio[-pic,"Bat", drop=F], trainControl.args = list(method="repeatedcv",number=5, repeats=5,   savePredictions = "final"),ytest=observed)
predicted<-predict(m$finalModel, newdata=abio[pic,], predict.all=T)
observed=abio[pic,"Bat"]

RFerror_reg(predicted,observed)
